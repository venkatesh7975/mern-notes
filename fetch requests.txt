fetch requests:

get::
async function fetchData() {
  try {
    const response = await fetch('https://api.example.com/data');
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    const data = await response.json();
    console.log('GET request succeeded3 with JSON response:', data);
  } catch (error) {
    console.error('Error fetching data:', error);
  }
}

fetchData();



post:

async postData=()=> {
  const userDetails = { username: 'example', password: 'secret' };

  try {
    const response = await fetch('https://api.example.com/users', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(userDetails),
    });
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    const data = await response.json();
    console.log('POST request succeeded with JSON response:', data);
  } catch (error) {
    console.error('Error posting data:', error);
  }
}

postData();


put:

async function putData() {
  const putData = { username: 'newusername' };

  try {
    const response = await fetch('https://api.example.com/users/1', {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(putData),
    });
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    const data = await response.json();
    console.log('PUT request succeeded with JSON response:', data);
  } catch (error) {
    console.error('Error updating data:', error);
  }
}

putData();



delete:

async function deleteData() {
  try {
    const response = await fetch('https://api.example.com/users/1', {
      method: 'DELETE',
    });
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    console.log('DELETE request succeeded');
  } catch (error) {
    console.error('Error deleting data:', error);
  }
}

deleteData();


