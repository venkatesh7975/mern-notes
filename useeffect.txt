import React, { useEffect, useState } from "react";

export default function App() {
  const [numArray, setNumberArray] = useState([]);
  const [input, setInput] = useState("");
  const [res, setRes] = useState("");

  useEffect(() => {
    const fetchData = async () => {
      try {
        const res = await fetch("http://localhost:4001");
        const data = await res.json();
        setNumberArray(data);
      } catch (error) {
        console.error("Error fetching data:", error);
      }
    };
    fetchData();
  }, []);

  const onAdd = async () => {
    try {
      const response = await fetch("http://localhost:4001/add", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ number: input }),
      });
      const result = await response.json();
      setRes(result.message);

      // Optionally, refetch the data to update the displayed list
      const updatedRes = await fetch("http://localhost:4001");
      const updatedData = await updatedRes.json();
      setNumberArray(updatedData);
    } catch (error) {
      console.error("Error adding number:", error);
    }
  };

  return (
    <div>
      {numArray.map((num, index) => (
        <h1 key={index}>{num}</h1>
      ))}
      <input 
        type="number"
        value={input}
        onChange={(e) => setInput(e.target.value)} 
      />
      <button onClick={onAdd}>Add</button>
      {res && <p>{res}</p>}
    </div>
  );
}







app.post("/add", (req, res) => {
  const { number } = req.body;
  const num = parseInt(number, 10);
  if (!isNaN(num)) {
    arr.push(num);
    res.json({ message: "Number added successfully!" });
  } else {
    res.status(400).json({ message: "Invalid number" });
  }
});





http status codes:
 informational (1xx),
 success (2xx),
 redirection (3xx),
 client error (4xx),
 and server error (5xx).


try{
//logic
}
catch(err){
console.log("error");
}
finally{
console.log("Hello");
}



cors-cross origin resource sharing






